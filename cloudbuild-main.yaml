substitutions:
  # Repository Specific configuration. DevOps can change these as needed
  _REPOSITORY: YOUR_CONTAINER_REPOSITORY_NAME
  _REPO_TO_CLONE: $(body.repository.clone_url)

options:
  substitution_option: ALLOW_LOOSE
  logging: CLOUD_LOGGING_ONLY

steps:
  - name: 'ubuntu'
    id: 'Print results'
    entrypoint: 'bash'
    args: [
      '-c',
      'echo $_REPO_TO_CLONE'
    ]

  - name: 'gcr.io/cloud-builders/git'
    id: 'Clone intelligent pipeline'
    entrypoint: 'bash'
    args: [
      '-c',
      'git clone https://github.com/brianpipeline/intelligent-pipeline'
    ]

  - name: 'gcr.io/cloud-builders/git'
    id: 'Clone intelligent pipeline'
    entrypoint: 'bash'
    args: [
      '-c',
      'git clone $_REPO_TO_CLONE'
    ]

  - name: 'ubuntu'
    id: 'just do an ls'
    entrypoint: 'bash'
    args: [
      '-c',
      'ls'
    ]


  # Build the container image
#  - name: "gcr.io/cloud-builders/docker"
#    args:
#      [
#        "build",
#        "-t",
#        "${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_IMAGE_NAME}:${SHORT_SHA}",
#        ".",
#      ]
#    id: Building the container image
#
#  # Push the container image to Container Registry
#  - name: "gcr.io/cloud-builders/docker"
#    args:
#      [
#        "push",
#        "${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_IMAGE_NAME}:${SHORT_SHA}",
#      ]
#    id: Pushing the image to registry
#
#  # Deploy container image to Cloud Run
#  - name: "gcr.io/cloud-builders/gcloud"
#    args:
#      [
#        "run",
#        "deploy",
#        "${_REPOSITORY}",
#        "--image",
#        "${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_IMAGE_NAME}:${SHORT_SHA}",
#        "--region",
#        "${_REGION}",
#        "--platform",
#        "managed",
#        "--allow-unauthenticated",
#      ]